// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_erfan_youtube_muxer_2025/test/youtube_downloader_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter_erfan_youtube_muxer_2025/src/permission_checker.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:youtube_explode_dart/src/channels/channels.dart' as _i4;
import 'package:youtube_explode_dart/src/playlists/playlist_client.dart' as _i3;
import 'package:youtube_explode_dart/src/search/search_client.dart' as _i5;
import 'package:youtube_explode_dart/src/videos/video_client.dart' as _i2;
import 'package:youtube_explode_dart/src/youtube_explode_base.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeVideoClient_0 extends _i1.SmartFake implements _i2.VideoClient {
  _FakeVideoClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlaylistClient_1 extends _i1.SmartFake
    implements _i3.PlaylistClient {
  _FakePlaylistClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelClient_2 extends _i1.SmartFake implements _i4.ChannelClient {
  _FakeChannelClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSearchClient_3 extends _i1.SmartFake implements _i5.SearchClient {
  _FakeSearchClient_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [YoutubeExplode].
///
/// See the documentation for Mockito's code generation for more information.
class MockYoutubeExplode extends _i1.Mock implements _i6.YoutubeExplode {
  MockYoutubeExplode() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.VideoClient get videos => (super.noSuchMethod(
        Invocation.getter(#videos),
        returnValue: _FakeVideoClient_0(
          this,
          Invocation.getter(#videos),
        ),
      ) as _i2.VideoClient);

  @override
  _i3.PlaylistClient get playlists => (super.noSuchMethod(
        Invocation.getter(#playlists),
        returnValue: _FakePlaylistClient_1(
          this,
          Invocation.getter(#playlists),
        ),
      ) as _i3.PlaylistClient);

  @override
  _i4.ChannelClient get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: _FakeChannelClient_2(
          this,
          Invocation.getter(#channels),
        ),
      ) as _i4.ChannelClient);

  @override
  _i5.SearchClient get search => (super.noSuchMethod(
        Invocation.getter(#search),
        returnValue: _FakeSearchClient_3(
          this,
          Invocation.getter(#search),
        ),
      ) as _i5.SearchClient);

  @override
  set videos(_i2.VideoClient? _videos) => super.noSuchMethod(
        Invocation.setter(
          #videos,
          _videos,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set playlists(_i3.PlaylistClient? _playlists) => super.noSuchMethod(
        Invocation.setter(
          #playlists,
          _playlists,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set channels(_i4.ChannelClient? _channels) => super.noSuchMethod(
        Invocation.setter(
          #channels,
          _channels,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set search(_i5.SearchClient? _search) => super.noSuchMethod(
        Invocation.setter(
          #search,
          _search,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PermissionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionChecker extends _i1.Mock implements _i7.PermissionChecker {
  MockPermissionChecker() {
    _i1.throwOnMissingStub(this);
  }
}
